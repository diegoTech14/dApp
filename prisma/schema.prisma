// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PROPERTY_STATUS {
  Pending
  Verified
  Rejected
}

model Owner {
  id                   String     @id @default(uuid()) @db.Uuid
  wallet_address       String     @unique
  full_name            String
  email                String     @unique
  phone_number         String
  nationality          String
  date_of_birth        DateTime?
  kyc_doc_hash         String
  registration_tx_hash String
  created_at           DateTime   @default(now())
  updated_at           DateTime   @updatedAt

  // Relations
  properties           Property[]
}

model Investor {
  id             String    @id @default(uuid()) @db.Uuid
  wallet_address String    @unique
  full_name      String?
  email          String?   @unique
  kyc_status     String?   // "NotVerified", "Pending", "Verified", "Rejected"
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
}

model Property {
  id                       String          @id @default(uuid()) @db.Uuid
  title                    String
  description              String
  address                  String
  latitude                 Decimal?
  longitude                Decimal?
  area_sqm                 Decimal?
  amenities                String[]
  estimated_value          Decimal
  tokenization_percentage  Decimal
  total_tokens             Int
  price_per_token          Decimal
  verification_status      PROPERTY_STATUS @default(Pending)
  legal_docs_hash          String
  metadata_ipfs_hash       String
  registration_tx_hash     String          @db.VarChar(200)
  created_at               DateTime        @default(now())
  updated_at               DateTime        @updatedAt

  // Relations
  owner_id                 String          @db.Uuid
  owner                    Owner           @relation(fields: [owner_id], references: [id])
}
