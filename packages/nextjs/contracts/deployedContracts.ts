/**
 * This file is autogenerated by Scaffold-Stark.
 * You should not edit it manually or your changes might be overwritten.
 */

const deployedContracts = {
  devnet: {
    YourContract: {
      address:
        "0x55300f619fdb73ce840d32f49472f99fabeb526b748bfae75780de3459395fa",
      abi: [
        {
          type: "impl",
          name: "YourContractImpl",
          interface_name: "contracts::YourContract::IYourContract",
        },
        {
          type: "struct",
          name: "core::byte_array::ByteArray",
          members: [
            {
              name: "data",
              type: "core::array::Array::<core::bytes_31::bytes31>",
            },
            {
              name: "pending_word",
              type: "core::felt252",
            },
            {
              name: "pending_word_len",
              type: "core::integer::u32",
            },
          ],
        },
        {
          type: "struct",
          name: "core::integer::u256",
          members: [
            {
              name: "low",
              type: "core::integer::u128",
            },
            {
              name: "high",
              type: "core::integer::u128",
            },
          ],
        },
        {
          type: "enum",
          name: "core::option::Option::<core::integer::u256>",
          variants: [
            {
              name: "Some",
              type: "core::integer::u256",
            },
            {
              name: "None",
              type: "()",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::YourContract::IYourContract",
          items: [
            {
              type: "function",
              name: "greeting",
              inputs: [],
              outputs: [
                {
                  type: "core::byte_array::ByteArray",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "set_greeting",
              inputs: [
                {
                  name: "new_greeting",
                  type: "core::byte_array::ByteArray",
                },
                {
                  name: "amount_strk",
                  type: "core::option::Option::<core::integer::u256>",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "withdraw",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "premium",
              inputs: [],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableImpl",
          interface_name: "openzeppelin_access::ownable::interface::IOwnable",
        },
        {
          type: "interface",
          name: "openzeppelin_access::ownable::interface::IOwnable",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::YourContract::YourContract::GreetingChanged",
          kind: "struct",
          members: [
            {
              name: "greeting_setter",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_greeting",
              type: "core::byte_array::ByteArray",
              kind: "key",
            },
            {
              name: "premium",
              type: "core::bool",
              kind: "data",
            },
            {
              name: "value",
              type: "core::option::Option::<core::integer::u256>",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::YourContract::YourContract::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnableEvent",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "GreetingChanged",
              type: "contracts::YourContract::YourContract::GreetingChanged",
              kind: "nested",
            },
          ],
        },
      ],
      classHash:
        "0x5e4c766477764df946dcce9b0d2c865468882ac572c0d3767aeb98d23cbe74b",
    },
    host: {
      address:
        "0x66a7802e63b633cdf2e4f482d11d17d55f32c7392c017313bff6571da5dd15",
      abi: [
        {
          type: "impl",
          name: "HostImpl",
          interface_name: "contracts::host::IHostContract",
        },
        {
          type: "struct",
          name: "core::byte_array::ByteArray",
          members: [
            {
              name: "data",
              type: "core::array::Array::<core::bytes_31::bytes31>",
            },
            {
              name: "pending_word",
              type: "core::felt252",
            },
            {
              name: "pending_word_len",
              type: "core::integer::u32",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::host::Host",
          members: [
            {
              name: "host",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "fullName",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "email",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "phone",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "country",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "birthDate",
              type: "core::integer::u64",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::host::IHostContract",
          items: [
            {
              type: "function",
              name: "getHost",
              inputs: [
                {
                  name: "id",
                  type: "core::integer::u64",
                },
              ],
              outputs: [
                {
                  type: "contracts::host::Host",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "getHostId",
              inputs: [
                {
                  name: "contractAddress",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u64",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "insertHost",
              inputs: [
                {
                  name: "host",
                  type: "contracts::host::Host",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u64",
                },
              ],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableImpl",
          interface_name: "openzeppelin_access::ownable::interface::IOwnable",
        },
        {
          type: "interface",
          name: "openzeppelin_access::ownable::interface::IOwnable",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::host::host::HostRegistered",
          kind: "struct",
          members: [
            {
              name: "hostId",
              type: "core::integer::u64",
              kind: "data",
            },
            {
              name: "ownerAddress",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "metadataHash",
              type: "core::byte_array::ByteArray",
              kind: "data",
            },
            {
              name: "timestamp",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::host::host::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnableEvent",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "HostRegistered",
              type: "contracts::host::host::HostRegistered",
              kind: "nested",
            },
          ],
        },
      ],
      classHash:
        "0x5be3f7018a8c8405cf40e87a35887b8f0665e8c76bd8b62657377a8fdd3e097",
    },
    property: {
      address:
        "0x4e140a224d57420e53e6f7505a47df3f16d88b8a8a03ece42f12086077990b9",
      abi: [
        {
          type: "impl",
          name: "PropertyImpl",
          interface_name: "contracts::property::IPropertyContract",
        },
        {
          type: "struct",
          name: "core::byte_array::ByteArray",
          members: [
            {
              name: "data",
              type: "core::array::Array::<core::bytes_31::bytes31>",
            },
            {
              name: "pending_word",
              type: "core::felt252",
            },
            {
              name: "pending_word_len",
              type: "core::integer::u32",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::property::Property",
          members: [
            {
              name: "hostId",
              type: "core::integer::u64",
            },
            {
              name: "verificationStatus",
              type: "core::integer::u8",
            },
            {
              name: "title",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "description",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "address",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "latitude",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "longitude",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "amenities",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "annualYield",
              type: "core::integer::u64",
            },
            {
              name: "url",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "metadata_ipfs_hash",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "image_ipfs_hash",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "contract_ipfs_hash_token",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "legal_contract_signature",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "saleableTokenPercentage",
              type: "core::integer::u64",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::property::Earning",
          members: [
            {
              name: "earning",
              type: "core::integer::u64",
            },
            {
              name: "date",
              type: "core::felt252",
            },
            {
              name: "percentageToPay",
              type: "core::integer::u64",
            },
            {
              name: "mounthlyEarnings",
              type: "core::integer::u64",
            },
            {
              name: "paid",
              type: "core::bool",
            },
          ],
        },
        {
          type: "enum",
          name: "core::option::Option::<contracts::property::Earning>",
          variants: [
            {
              name: "Some",
              type: "contracts::property::Earning",
            },
            {
              name: "None",
              type: "()",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::property::IPropertyContract",
          items: [
            {
              type: "function",
              name: "getProperty",
              inputs: [
                {
                  name: "id",
                  type: "core::integer::u64",
                },
              ],
              outputs: [
                {
                  type: "contracts::property::Property",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "getPropertiesIdByHostId",
              inputs: [
                {
                  name: "hostId",
                  type: "core::integer::u64",
                },
              ],
              outputs: [
                {
                  type: "core::array::Array::<core::integer::u64>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "insertProperty",
              inputs: [
                {
                  name: "property",
                  type: "contracts::property::Property",
                },
                {
                  name: "hostId",
                  type: "core::integer::u64",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u64",
                },
              ],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "get_property_earnings",
              inputs: [
                {
                  name: "property_id",
                  type: "core::integer::u64",
                },
              ],
              outputs: [
                {
                  type: "core::array::Array::<contracts::property::Earning>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_latest_earning",
              inputs: [
                {
                  name: "property_id",
                  type: "core::integer::u64",
                },
              ],
              outputs: [
                {
                  type: "core::option::Option::<contracts::property::Earning>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "add_earning",
              inputs: [
                {
                  name: "property_id",
                  type: "core::integer::u64",
                },
                {
                  name: "earning",
                  type: "contracts::property::Earning",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableImpl",
          interface_name: "openzeppelin_access::ownable::interface::IOwnable",
        },
        {
          type: "interface",
          name: "openzeppelin_access::ownable::interface::IOwnable",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::property::property::PropertyRegistered",
          kind: "struct",
          members: [
            {
              name: "propertyId",
              type: "core::integer::u64",
              kind: "data",
            },
            {
              name: "ownerAddress",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "metadataHash",
              type: "core::byte_array::ByteArray",
              kind: "data",
            },
            {
              name: "timestamp",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::property::property::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnableEvent",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "PropertyRegistered",
              type: "contracts::property::property::PropertyRegistered",
              kind: "nested",
            },
          ],
        },
      ],
      classHash:
        "0x3665c94220405c8bd57b9458fcc28c13c8ad3278e388eca7599f39fe513db1c",
    },
    ToKasaFractionalAssets: {
      address:
        "0x1c59d381f9a54ad6a60b3c614e9a8af61d8171ac05af7a257a33589228ec22a",
      abi: [
        {
          type: "function",
          name: "pause",
          inputs: [],
          outputs: [],
          state_mutability: "external",
        },
        {
          type: "function",
          name: "unpause",
          inputs: [],
          outputs: [],
          state_mutability: "external",
        },
        {
          type: "struct",
          name: "core::integer::u256",
          members: [
            {
              name: "low",
              type: "core::integer::u128",
            },
            {
              name: "high",
              type: "core::integer::u128",
            },
          ],
        },
        {
          type: "function",
          name: "burn",
          inputs: [
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "token_id",
              type: "core::integer::u256",
            },
            {
              name: "value",
              type: "core::integer::u256",
            },
          ],
          outputs: [],
          state_mutability: "external",
        },
        {
          type: "struct",
          name: "core::array::Span::<core::integer::u256>",
          members: [
            {
              name: "snapshot",
              type: "@core::array::Array::<core::integer::u256>",
            },
          ],
        },
        {
          type: "function",
          name: "batch_burn",
          inputs: [
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "token_ids",
              type: "core::array::Span::<core::integer::u256>",
            },
            {
              name: "values",
              type: "core::array::Span::<core::integer::u256>",
            },
          ],
          outputs: [],
          state_mutability: "external",
        },
        {
          type: "function",
          name: "batchBurn",
          inputs: [
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "tokenIds",
              type: "core::array::Span::<core::integer::u256>",
            },
            {
              name: "values",
              type: "core::array::Span::<core::integer::u256>",
            },
          ],
          outputs: [],
          state_mutability: "external",
        },
        {
          type: "struct",
          name: "core::array::Span::<core::felt252>",
          members: [
            {
              name: "snapshot",
              type: "@core::array::Array::<core::felt252>",
            },
          ],
        },
        {
          type: "function",
          name: "mint",
          inputs: [
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "token_id",
              type: "core::integer::u256",
            },
            {
              name: "value",
              type: "core::integer::u256",
            },
            {
              name: "data",
              type: "core::array::Span::<core::felt252>",
            },
          ],
          outputs: [],
          state_mutability: "external",
        },
        {
          type: "function",
          name: "batch_mint",
          inputs: [
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "token_ids",
              type: "core::array::Span::<core::integer::u256>",
            },
            {
              name: "values",
              type: "core::array::Span::<core::integer::u256>",
            },
            {
              name: "data",
              type: "core::array::Span::<core::felt252>",
            },
          ],
          outputs: [],
          state_mutability: "external",
        },
        {
          type: "function",
          name: "batchMint",
          inputs: [
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "tokenIds",
              type: "core::array::Span::<core::integer::u256>",
            },
            {
              name: "values",
              type: "core::array::Span::<core::integer::u256>",
            },
            {
              name: "data",
              type: "core::array::Span::<core::felt252>",
            },
          ],
          outputs: [],
          state_mutability: "external",
        },
        {
          type: "struct",
          name: "core::byte_array::ByteArray",
          members: [
            {
              name: "data",
              type: "core::array::Array::<core::bytes_31::bytes31>",
            },
            {
              name: "pending_word",
              type: "core::felt252",
            },
            {
              name: "pending_word_len",
              type: "core::integer::u32",
            },
          ],
        },
        {
          type: "function",
          name: "set_base_uri",
          inputs: [
            {
              name: "base_uri",
              type: "core::byte_array::ByteArray",
            },
          ],
          outputs: [],
          state_mutability: "external",
        },
        {
          type: "function",
          name: "setBaseUri",
          inputs: [
            {
              name: "baseUri",
              type: "core::byte_array::ByteArray",
            },
          ],
          outputs: [],
          state_mutability: "external",
        },
        {
          type: "impl",
          name: "UpgradeableImpl",
          interface_name: "openzeppelin_upgrades::interface::IUpgradeable",
        },
        {
          type: "interface",
          name: "openzeppelin_upgrades::interface::IUpgradeable",
          items: [
            {
              type: "function",
              name: "upgrade",
              inputs: [
                {
                  name: "new_class_hash",
                  type: "core::starknet::class_hash::ClassHash",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "impl",
          name: "ERC1155MixinImpl",
          interface_name: "openzeppelin_token::erc1155::interface::ERC1155ABI",
        },
        {
          type: "struct",
          name: "core::array::Span::<core::starknet::contract_address::ContractAddress>",
          members: [
            {
              name: "snapshot",
              type: "@core::array::Array::<core::starknet::contract_address::ContractAddress>",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "interface",
          name: "openzeppelin_token::erc1155::interface::ERC1155ABI",
          items: [
            {
              type: "function",
              name: "balance_of",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "token_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "balance_of_batch",
              inputs: [
                {
                  name: "accounts",
                  type: "core::array::Span::<core::starknet::contract_address::ContractAddress>",
                },
                {
                  name: "token_ids",
                  type: "core::array::Span::<core::integer::u256>",
                },
              ],
              outputs: [
                {
                  type: "core::array::Span::<core::integer::u256>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "safe_transfer_from",
              inputs: [
                {
                  name: "from",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "to",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "token_id",
                  type: "core::integer::u256",
                },
                {
                  name: "value",
                  type: "core::integer::u256",
                },
                {
                  name: "data",
                  type: "core::array::Span::<core::felt252>",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "safe_batch_transfer_from",
              inputs: [
                {
                  name: "from",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "to",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "token_ids",
                  type: "core::array::Span::<core::integer::u256>",
                },
                {
                  name: "values",
                  type: "core::array::Span::<core::integer::u256>",
                },
                {
                  name: "data",
                  type: "core::array::Span::<core::felt252>",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "is_approved_for_all",
              inputs: [
                {
                  name: "owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "operator",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "set_approval_for_all",
              inputs: [
                {
                  name: "operator",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "approved",
                  type: "core::bool",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "supports_interface",
              inputs: [
                {
                  name: "interface_id",
                  type: "core::felt252",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "uri",
              inputs: [
                {
                  name: "token_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "core::byte_array::ByteArray",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "balanceOf",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "tokenId",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "balanceOfBatch",
              inputs: [
                {
                  name: "accounts",
                  type: "core::array::Span::<core::starknet::contract_address::ContractAddress>",
                },
                {
                  name: "tokenIds",
                  type: "core::array::Span::<core::integer::u256>",
                },
              ],
              outputs: [
                {
                  type: "core::array::Span::<core::integer::u256>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "safeTransferFrom",
              inputs: [
                {
                  name: "from",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "to",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "tokenId",
                  type: "core::integer::u256",
                },
                {
                  name: "value",
                  type: "core::integer::u256",
                },
                {
                  name: "data",
                  type: "core::array::Span::<core::felt252>",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "safeBatchTransferFrom",
              inputs: [
                {
                  name: "from",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "to",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "tokenIds",
                  type: "core::array::Span::<core::integer::u256>",
                },
                {
                  name: "values",
                  type: "core::array::Span::<core::integer::u256>",
                },
                {
                  name: "data",
                  type: "core::array::Span::<core::felt252>",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "isApprovedForAll",
              inputs: [
                {
                  name: "owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "operator",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "setApprovalForAll",
              inputs: [
                {
                  name: "operator",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "approved",
                  type: "core::bool",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "impl",
          name: "PausableImpl",
          interface_name: "openzeppelin_security::interface::IPausable",
        },
        {
          type: "interface",
          name: "openzeppelin_security::interface::IPausable",
          items: [
            {
              type: "function",
              name: "is_paused",
              inputs: [],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "AccessControlImpl",
          interface_name:
            "openzeppelin_access::accesscontrol::interface::IAccessControl",
        },
        {
          type: "interface",
          name: "openzeppelin_access::accesscontrol::interface::IAccessControl",
          items: [
            {
              type: "function",
              name: "has_role",
              inputs: [
                {
                  name: "role",
                  type: "core::felt252",
                },
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_role_admin",
              inputs: [
                {
                  name: "role",
                  type: "core::felt252",
                },
              ],
              outputs: [
                {
                  type: "core::felt252",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "grant_role",
              inputs: [
                {
                  name: "role",
                  type: "core::felt252",
                },
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "revoke_role",
              inputs: [
                {
                  name: "role",
                  type: "core::felt252",
                },
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_role",
              inputs: [
                {
                  name: "role",
                  type: "core::felt252",
                },
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "impl",
          name: "AccessControlCamelImpl",
          interface_name:
            "openzeppelin_access::accesscontrol::interface::IAccessControlCamel",
        },
        {
          type: "interface",
          name: "openzeppelin_access::accesscontrol::interface::IAccessControlCamel",
          items: [
            {
              type: "function",
              name: "hasRole",
              inputs: [
                {
                  name: "role",
                  type: "core::felt252",
                },
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "getRoleAdmin",
              inputs: [
                {
                  name: "role",
                  type: "core::felt252",
                },
              ],
              outputs: [
                {
                  type: "core::felt252",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "grantRole",
              inputs: [
                {
                  name: "role",
                  type: "core::felt252",
                },
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "revokeRole",
              inputs: [
                {
                  name: "role",
                  type: "core::felt252",
                },
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounceRole",
              inputs: [
                {
                  name: "role",
                  type: "core::felt252",
                },
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "impl",
          name: "ERC2981Impl",
          interface_name:
            "openzeppelin_token::common::erc2981::interface::IERC2981",
        },
        {
          type: "interface",
          name: "openzeppelin_token::common::erc2981::interface::IERC2981",
          items: [
            {
              type: "function",
              name: "royalty_info",
              inputs: [
                {
                  name: "token_id",
                  type: "core::integer::u256",
                },
                {
                  name: "sale_price",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "(core::starknet::contract_address::ContractAddress, core::integer::u256)",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "ERC2981InfoImpl",
          interface_name:
            "openzeppelin_token::common::erc2981::interface::IERC2981Info",
        },
        {
          type: "interface",
          name: "openzeppelin_token::common::erc2981::interface::IERC2981Info",
          items: [
            {
              type: "function",
              name: "default_royalty",
              inputs: [],
              outputs: [
                {
                  type: "(core::starknet::contract_address::ContractAddress, core::integer::u128, core::integer::u128)",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "token_royalty",
              inputs: [
                {
                  name: "token_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "(core::starknet::contract_address::ContractAddress, core::integer::u128, core::integer::u128)",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "ERC2981AdminAccessControlImpl",
          interface_name:
            "openzeppelin_token::common::erc2981::interface::IERC2981Admin",
        },
        {
          type: "interface",
          name: "openzeppelin_token::common::erc2981::interface::IERC2981Admin",
          items: [
            {
              type: "function",
              name: "set_default_royalty",
              inputs: [
                {
                  name: "receiver",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "fee_numerator",
                  type: "core::integer::u128",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "delete_default_royalty",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "set_token_royalty",
              inputs: [
                {
                  name: "token_id",
                  type: "core::integer::u256",
                },
                {
                  name: "receiver",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "fee_numerator",
                  type: "core::integer::u128",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "reset_token_royalty",
              inputs: [
                {
                  name: "token_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "default_admin",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "pauser",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "minter",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "uri_setter",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "upgrader",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "default_royalty_receiver",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "royalty_admin",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_token::erc1155::erc1155::ERC1155Component::TransferSingle",
          kind: "struct",
          members: [
            {
              name: "operator",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "from",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "to",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "id",
              type: "core::integer::u256",
              kind: "data",
            },
            {
              name: "value",
              type: "core::integer::u256",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_token::erc1155::erc1155::ERC1155Component::TransferBatch",
          kind: "struct",
          members: [
            {
              name: "operator",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "from",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "to",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "ids",
              type: "core::array::Span::<core::integer::u256>",
              kind: "data",
            },
            {
              name: "values",
              type: "core::array::Span::<core::integer::u256>",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_token::erc1155::erc1155::ERC1155Component::ApprovalForAll",
          kind: "struct",
          members: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "operator",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "approved",
              type: "core::bool",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_token::erc1155::erc1155::ERC1155Component::URI",
          kind: "struct",
          members: [
            {
              name: "value",
              type: "core::byte_array::ByteArray",
              kind: "data",
            },
            {
              name: "id",
              type: "core::integer::u256",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_token::erc1155::erc1155::ERC1155Component::Event",
          kind: "enum",
          variants: [
            {
              name: "TransferSingle",
              type: "openzeppelin_token::erc1155::erc1155::ERC1155Component::TransferSingle",
              kind: "nested",
            },
            {
              name: "TransferBatch",
              type: "openzeppelin_token::erc1155::erc1155::ERC1155Component::TransferBatch",
              kind: "nested",
            },
            {
              name: "ApprovalForAll",
              type: "openzeppelin_token::erc1155::erc1155::ERC1155Component::ApprovalForAll",
              kind: "nested",
            },
            {
              name: "URI",
              type: "openzeppelin_token::erc1155::erc1155::ERC1155Component::URI",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_introspection::src5::SRC5Component::Event",
          kind: "enum",
          variants: [],
        },
        {
          type: "event",
          name: "openzeppelin_security::pausable::PausableComponent::Paused",
          kind: "struct",
          members: [
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_security::pausable::PausableComponent::Unpaused",
          kind: "struct",
          members: [
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_security::pausable::PausableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "Paused",
              type: "openzeppelin_security::pausable::PausableComponent::Paused",
              kind: "nested",
            },
            {
              name: "Unpaused",
              type: "openzeppelin_security::pausable::PausableComponent::Unpaused",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
          kind: "struct",
          members: [
            {
              name: "role",
              type: "core::felt252",
              kind: "data",
            },
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "sender",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
          kind: "struct",
          members: [
            {
              name: "role",
              type: "core::felt252",
              kind: "data",
            },
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "sender",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
          kind: "struct",
          members: [
            {
              name: "role",
              type: "core::felt252",
              kind: "data",
            },
            {
              name: "previous_admin_role",
              type: "core::felt252",
              kind: "data",
            },
            {
              name: "new_admin_role",
              type: "core::felt252",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "RoleGranted",
              type: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
              kind: "nested",
            },
            {
              name: "RoleRevoked",
              type: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
              kind: "nested",
            },
            {
              name: "RoleAdminChanged",
              type: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
          kind: "struct",
          members: [
            {
              name: "class_hash",
              type: "core::starknet::class_hash::ClassHash",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "Upgraded",
              type: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_token::common::erc2981::erc2981::ERC2981Component::Event",
          kind: "enum",
          variants: [],
        },
        {
          type: "event",
          name: "contracts::ToKasaFractionalAssets::ToKasaFractionalAssets::Event",
          kind: "enum",
          variants: [
            {
              name: "ERC1155Event",
              type: "openzeppelin_token::erc1155::erc1155::ERC1155Component::Event",
              kind: "flat",
            },
            {
              name: "SRC5Event",
              type: "openzeppelin_introspection::src5::SRC5Component::Event",
              kind: "flat",
            },
            {
              name: "PausableEvent",
              type: "openzeppelin_security::pausable::PausableComponent::Event",
              kind: "flat",
            },
            {
              name: "AccessControlEvent",
              type: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
              kind: "flat",
            },
            {
              name: "UpgradeableEvent",
              type: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
              kind: "flat",
            },
            {
              name: "ERC2981Event",
              type: "openzeppelin_token::common::erc2981::erc2981::ERC2981Component::Event",
              kind: "flat",
            },
          ],
        },
      ],
      classHash:
        "0x5b8b9ba0bc95fa1e82843e18e47b08e6bf8ca371f678d9125ff0e7fda2516d8",
    },
    kasaSale: {
      address:
        "0x42883318a36739af4d5ce01bb3a9fd4339f8a6086716cab01e9f7887bba5174",
      abi: [
        {
          type: "impl",
          name: "KasaSaleContract",
          interface_name: "contracts::kasaSale::kasaSale::IKasaSaleContract",
        },
        {
          type: "struct",
          name: "core::integer::u256",
          members: [
            {
              name: "low",
              type: "core::integer::u128",
            },
            {
              name: "high",
              type: "core::integer::u128",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::kasaSale::kasaSale::IKasaSaleContract",
          items: [
            {
              type: "function",
              name: "buy",
              inputs: [
                {
                  name: "amount",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableImpl",
          interface_name: "openzeppelin_access::ownable::interface::IOwnable",
        },
        {
          type: "interface",
          name: "openzeppelin_access::ownable::interface::IOwnable",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "tokasa_contract",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::kasaSale::kasaSale::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnableEvent",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
          ],
        },
      ],
      classHash:
        "0x556e0dc439e3762d3ddd6a35f507c106167b9499f89c2651e8725554931840c",
    },
  },
} as const;

export default deployedContracts;
